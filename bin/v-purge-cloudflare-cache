#!/bin/bash

# Include hestia functions
# shellcheck source=/usr/local/hestia/func/main.sh
source $HESTIA/func/main.sh

#----------------------------------------------------------#
#                    Variable&Function                       #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2
files=$3  # Optional: comma-separated list of files to purge

# Includes
source $HESTIA/conf/hestia.conf

check_args '2' "$#" 'USER DOMAIN [FILES]'
is_format_valid 'user' 'domain'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"

# Create PHP wrapper for cache purge
php_script=$(cat <<EOF
<?php
require_once '/usr/local/hestia/web/src/init.php';
require_once '/usr/local/hestia/web/src/app/System/CloudflareAPI.php';

// Read config file
\$config_file = '/usr/local/hestia/data/users/$user/cloudflare/cloudflare.conf';
if (!file_exists(\$config_file)) {
    exit(1);
}

\$config = parse_ini_file(\$config_file);
if (!\$config || !isset(\$config['API_TOKEN'])) {
    exit(1);
}

// Initialize API
\$api = new \Hestia\System\CloudflareAPI(\$config['API_TOKEN']);

// Get zone ID
\$zoneId = \$api->getZoneId('$domain');
if (\$zoneId === false) {
    fwrite(STDERR, "Zone not found for domain: $domain\n");
    exit(1);
}

// Parse files if provided
\$files = [];
if ('$files' !== '') {
    \$files = array_map('trim', explode(',', '$files'));
    // Ensure all files have domain prefix
    \$files = array_map(function(\$file) {
        return strpos(\$file, 'http') === 0 ? \$file : "https://$domain/\$file";
    }, \$files);
}

// Purge cache
if (!\$api->purgeCache(\$zoneId, \$files)) {
    fwrite(STDERR, "Failed to purge cache: " . \$api->getLastError() . "\n");
    exit(1);
}

echo json_encode([
    'status' => 'success',
    'message' => empty(\$files) ? 'Purged all cache' : 'Purged specific files',
    'files' => \$files
], JSON_PRETTY_PRINT);
EOF
)

# Execute PHP script
result=$(echo "$php_script" | php)
if [ $? -ne 0 ]; then
    check_result $E_CONNECT "Failed to purge cache"
fi

#----------------------------------------------------------#
#                       Hestia                              #
#----------------------------------------------------------#

# Logging
if [ -z "$files" ]; then
    $BIN/v-log-action "$user" "Info" "System" "Purged all Cloudflare cache for $domain."
else
    $BIN/v-log-action "$user" "Info" "System" "Purged specific files from Cloudflare cache for $domain."
fi

# Print results
echo "$result"

exit