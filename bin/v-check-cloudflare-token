#!/bin/bash

# Include hestia functions
# shellcheck source=/usr/local/hestia/func/main.sh
source $HESTIA/func/main.sh

#----------------------------------------------------------#
#                    Variable&Function                       #
#----------------------------------------------------------#

# Argument definition
user=$1

# Includes
source $HESTIA/conf/hestia.conf

check_args '1' "$#" 'USER'
is_format_valid 'user'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"

# Create PHP wrapper for token verification
php_script=$(cat <<EOF
<?php
require_once '/usr/local/hestia/web/src/init.php';
require_once '/usr/local/hestia/web/src/app/System/CloudflareAPI.php';

// Read config file
\$config_file = '/usr/local/hestia/data/users/$user/cloudflare/cloudflare.conf';
if (!file_exists(\$config_file)) {
    exit(1);
}

\$config = parse_ini_file(\$config_file);
if (!\$config || !isset(\$config['API_TOKEN'])) {
    exit(1);
}

// Initialize API and verify token
\$api = new \Hestia\System\CloudflareAPI(\$config['API_TOKEN']);
exit(\$api->verifyToken() ? 0 : 1);
EOF
)

# Execute PHP verification
result=$(echo "$php_script" | php)
if [ $? -ne 0 ]; then
    check_result $E_CONNECT "Invalid or expired Cloudflare API token"
fi

#----------------------------------------------------------#
#                       Hestia                              #
#----------------------------------------------------------#

# Logging
$BIN/v-log-action "$user" "Info" "System" "Cloudflare API token verified."

exit