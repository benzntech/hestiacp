#!/bin/bash

# Include hestia functions
# shellcheck source=/usr/local/hestia/func/main.sh
source $HESTIA/func/main.sh

#----------------------------------------------------------#
#                    Variable&Function                       #
#----------------------------------------------------------#

# Argument definition
user=$1
format=${2:-shell}

# Includes
source $HESTIA/conf/hestia.conf

check_args '1' "$#" 'USER [FORMAT]'
is_format_valid 'user'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"

# Create PHP wrapper for zone listing
php_script=$(cat <<EOF
<?php
require_once '/usr/local/hestia/web/src/init.php';
require_once '/usr/local/hestia/web/src/app/System/CloudflareAPI.php';

// Read config file
\$config_file = '/usr/local/hestia/data/users/$user/cloudflare/cloudflare.conf';
if (!file_exists(\$config_file)) {
    exit(1);
}

\$config = parse_ini_file(\$config_file);
if (!\$config || !isset(\$config['API_TOKEN'])) {
    exit(1);
}

// Initialize API and get zones
\$api = new \Hestia\System\CloudflareAPI(\$config['API_TOKEN']);
\$zones = \$api->listZones();

if (\$zones === false) {
    exit(1);
}

// Format output based on requested format
\$format = '$format';
if (\$format === 'json') {
    echo json_encode(\$zones);
} else {
    foreach (\$zones as \$zone) {
        echo sprintf(
            "%s\t%s\t%s\t%s\n",
            \$zone['name'],
            \$zone['id'],
            \$zone['status'],
            \$zone['name_servers'][0]
        );
    }
}
EOF
)

# Execute PHP script
result=$(echo "$php_script" | php)
if [ $? -ne 0 ]; then
    check_result $E_CONNECT "Failed to list Cloudflare zones"
fi

# Print result
case $format in
    json)    echo "$result" ;;
    shell)   echo -e "DOMAIN\tZONE_ID\tSTATUS\tNAMESERVER\n$result" ;;
    *)       check_result $E_INVALID "Invalid output format" ;;
esac

#----------------------------------------------------------#
#                       Hestia                              #
#----------------------------------------------------------#

# Logging
$BIN/v-log-action "$user" "Info" "System" "Listed Cloudflare zones."

exit